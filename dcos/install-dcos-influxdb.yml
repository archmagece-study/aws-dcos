---
- name: Install InfluxDB servers
  hosts: influxdb
  gather_facts: no
  roles:
  - influxdb
  become: yes

  tasks:
  - include: roles/common/tasks/install-docker.yml
    vars:
      docker_block_size: 16

  - include: roles/common/tasks/install-telegraf.yml
    vars:
      telegraf_role: dcos-slave

  - include: roles/common/tasks/install-dcos.yml
    vars:
      bootstrap: "{{ groups['dcos-bootstrap'][0] }}"
      dcos_block_size: 4
      dcos_mode: slave

  - include: roles/common/tasks/install-dcos-filebeat.yml

  #- name: replace resource rules
  #  copy:
  #    src:  roles/influxdb/files/mesos-resources
  #    dest: /var/lib/dcos/mesos-resources
  #  register: mesos_resource
  #- name: remove DC/OS metadata
  #  file:
  #    path:  /var/lib/mesos/slave/meta/slaves/latest
  #    state: absent
  #  when: mesos_resource.changed
  #- name: start docker
  #  systemd:
  #    enabled: yes
  #    name:    dcos-mesos-slave
  #    state:   started
  #  when: mesos_resource.changed

  - name: create directories
    file:
      path:  "/home/influxdb/{{ item }}"
      state: directory
    with_items:
    - conf
    - log
    - data
    - meta
    - wal

  - name: set config
    copy:
      src:  roles/influxdb/files/influxdb.conf
      dest: /home/influxdb/conf/influxdb.conf
    register: config


  - name: create deploy json
    local_action:
      module: template
      src:  roles/influxdb/templates/dcos-influxdb.json.j2
      dest: /tmp/dcos-influxdb.json
    run_once: true
    become: no

  - name: start or restart DC/OS service
    uri:
      url:    "http://{{ groups['dcos-master'][0] }}/marathon/v2/apps/influxdb"
      method: PUT
      body:   "{{ lookup('file', '/tmp/dcos-influxdb.json') }}"
      body_format: json
      status_code: 200,201
    run_once: true

  - name: remove deploy json
    local_action:
      module: file
      path:  /tmp/dcos-influxdb.json
      state: absent
    run_once: true
    become: no
