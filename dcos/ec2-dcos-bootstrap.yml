---
- name: Create EC2 Instance for DC/OS Bootstrap Server
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    inifile:        "{{ inventory_dir }}/files/aws.ini"
    access_key:     "{{ lookup('ini', 'access_key section=credential file=' + inifile) }}"
    secret_key:     "{{ lookup('ini', 'secret_key section=credential file=' + inifile) }}"
    security_group: "{{ lookup('ini', 'private section=security_group file=' + inifile) }}"
    subnet:         "{{ lookup('ini', 'mgmt_0 section=subnet file=' + inifile) }}"
    ec2_name:   "ec2-{{ zone }}-dcos-bootstrap"
    instances:  "{{ groups['dcos-bootstrap-' + zone] }}"

  tasks:
  - name: launch ec2 instance for DC/OS bootstrap server
    ec2:
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      ebs_optimized:  yes
      group_id:       "{{ security_group }}"
      image:          "{{ aws.ami.centos }}"
      instance_tags:
        Name:           "{{ ec2_name }}"
        organization:   "{{ aws.organization }}"
        owner:          "{{ aws.owner }}"
      instance_type:  m5.large
      key_name:       platform
      private_ip:     "{{ item }}"
      region:         "{{ aws.region }}"
      volumes:
      - delete_on_termination: yes
        device_name: /dev/sda1
        volume_size: 16
        volume_type: gp2
      vpc_subnet_id: "{{ subnet }}"
      wait: yes
    with_items: "{{ instances }}"
    register: ec2

  - include: roles/common/tasks/tagging-volume.yml
    vars:
      volume:      /dev/sda1
      volume_name: "{{ ec2_name }}"

  - name: remove host from ~/.ssh/known_hosts
    known_hosts: name={{ item }} state=absent
    with_items: "{{ instances }}"


- name: Wait running EC2 instance
  hosts: "dcos-bootstrap-{{ zone }}"
  gather_facts: no
  become: yes

  tasks:
  - pause: seconds=60
  - wait_for_connection:
      dealy: 5
