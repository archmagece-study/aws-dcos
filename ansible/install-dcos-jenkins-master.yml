---
- name: Install Jenkins Master
  hosts: "jenkins-master-{{ zone }}"
  gather_facts: no
  roles:
  - dcos
  become: yes

  tasks:
  - include: roles/common/tasks/install-docker.yml
    vars:
      docker_block_size: 64

  - include: roles/common/tasks/install-telegraf.yml

  - include: roles/dcos/tasks/install-dcos.yml
    vars:
      bootstrap: "{{ groups['dcos-bootstrap-' + zone][0] }}"
      dcos_block_size: 2
      dcos_mode: slave


  - include: roles/dcos/tasks/install-dcos-filebeat.yml


  - stat: path=/var/lib/tomcat
    register: tomcat_path
  - name: make file for jenkins block device
    shell: "fallocate -l 4GiB /mnt/tomcat.disk.image"
    when: not tomcat_path.stat.exists
  - include: roles/common/tasks/mount-device-block.yml
    vars:
      mount_device: /mnt/tomcat.disk.image
      mount_path:   /var/lib/tomcat
    when: not tomcat_path.stat.exists

  - name: create directories for volume binding
    file:
      path:  "/var/lib/tomcat/{{ item }}"
      state: directory
      recurse: yes
    with_items:
    - conf
    - logs
    - temp

  - name: create jenkins context
    copy:
      content: |
        <?xml version="1.0" encoding="utf-8"?>
        <Context
          path="/backend"
          docBase="/var/lib/jenkins/lib/2.107.3/jenkins.war"
          debug="0"
          privileged="true">
          <Environment name="JENKINS_HOME" value="/var/lib/jenkins/home/backend" type="java.lang.String"/>
          <Resources cachingAllowed="true" cacheMaxSize="102400" />
        </Context>
      dest: /var/lib/tomcat/conf/backend.xml


  - stat: path=/var/lib/jenkins
    register: jenkins_path
  - include: roles/common/tasks/mount-device-block.yml
    vars:
      mount_device: /dev/nvme1n1
      mount_path:   /var/lib/jenkins
    when: not jenkins_path.stat.exists

  - name: create directories for jenkins
    file:
      path:  "/var/lib/jenkins{{ item }}"
      state: directory
      recurse: yes
    with_items:
    - /home/backend
    - /lib/2.107.3

  - name: download jenkins.war
    get_url:
      url:  http://mirrors.jenkins.io/war-stable/2.107.3/jenkins.war
      dest: /var/lib/jenkins/lib/2.107.3/jenkins.war


  - name: change permissions
    file:
      path:    "/var/lib/{{ item }}"
      group:   centos
      owner:   centos
      recurse: yes
    with_items:
    - tomcat
    - jenkins


  - name: create deploy json
    vars:
      domain_name: "{{ lookup('ini', 'domain_name section=common file=' + inifiles.aws) }}"
    local_action:
      module: template
      src:  roles/jenkins/templates/dcos-jenkins.json.j2
      dest: /tmp/dcos-jenkins.json
    run_once: yes
    become: no

  - name: start or restart DC/OS service
    uri:
      url:    "http://{{ groups['dcos-master-' + zone][0] }}/marathon/v2/apps/jenkins"
      method: PUT
      body:   "{{ lookup('file', '/tmp/dcos-jenkins.json') }}"
      body_format: json
      status_code: 200,201

  - name: remove deploy json
    local_action:
      module: file
      path:  /tmp/dcos-jenkins.json
      state: absent
    become: no
